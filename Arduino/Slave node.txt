#include <Printers.h>
#include <XBee.h>

XBee xbee = XBee();

unsigned long start = millis();

// allocate two bytes for to hold a 10-bit analog reading
///uint8_t payload[] = { 255,195,21 };

// with Series 1 you can use either 16-bit or 64-bit addressing

// 16-bit addressing: Enter address of remote XBee, typically the coordinator
///Tx16Request tx = Tx16Request(0x0000, payload, sizeof(payload));

// 64-bit addressing: This is the SH + SL address of remote XBee
XBeeAddress64 addr64 = XBeeAddress64(0x0013A200,0x40AA0A38);
// unless you have MY on the receiving radio set to FFFF, this will be received as a RX16 packet
///Tx64Request tx = Tx64Request(addr64, payload, sizeof(payload));

///TxStatusResponse txStatus = TxStatusResponse();

int pin =13;
int pin5;

//int statusLed = 11;
//int errorLed = 12;

void flashLed(int pin, int times, int wait) {
    
    for (int i = 0; i < times; i++) {
      digitalWrite(pin, HIGH);
      delay(wait);
      digitalWrite(pin, LOW);
      
      if (i + 1 < times) {
        delay(wait);
      }
    }
}

void setup() {
  //pinMode(statusLed, OUTPUT);

  
  pinMode(pin, OUTPUT);
  Serial.begin(9600);
  xbee.setSerial(Serial);
}

void loop() {

 int sensorValue = analogRead(A0);
  // Convert the analog reading (which goes from 0 - 1023) to a voltage (0 - 5V):
  float voltage = sensorValue * (5.0 / 1023.0);
  // print out the value you read:
  Serial.println(voltage);
  voltage=voltage*100;   //extra
   Serial.println(voltage);
  delay(500);



uint8_t payload[] = { 255,voltage,21 };

Tx64Request tx = Tx64Request(addr64, payload, sizeof(payload));

TxStatusResponse txStatus = TxStatusResponse();
  
   //delay(5000);
   // start transmitting after a startup delay.  Note: this will rollover to 0 eventually so not best way to handle
    if (millis() - start > 15000) {
      
      xbee.send(tx);

      // flash TX indicator
      flashLed(pin, 1, 100);
    }
  
    // after sending a tx request, we expect a status response
    // wait up to 5 seconds for the status response
    if (xbee.readPacket(5000)) {
        // got a response!

        // should be a znet tx status              
      if (xbee.getResponse().getApiId() == TX_STATUS_RESPONSE) {
         xbee.getResponse().getTxStatusResponse(txStatus);
        
         // get the delivery status, the fifth byte
           if (txStatus.getStatus() == SUCCESS) {
              // success.  time to celebrate
              flashLed(pin, 5, 50);
              Serial.println("responseeeeee");
           } else {
              // the remote XBee did not receive our packet. is it powered on?
              flashLed(pin, 3, 500);
              Serial.println("errrorrr");
           }
        }      
    } else if (xbee.getResponse().isError()) {
      //nss.print("Error reading packet.  Error code: ");  
      //nss.println(xbee.getResponse().getErrorCode());
      // or flash error led
    } else {
      // local XBee did not provide a timely TX Status Response.  Radio is not configured properly or connected
      flashLed(pin, 2, 50);
    }
    
    delay(500);
}